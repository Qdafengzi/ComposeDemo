plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
//    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.plugin.compose'
}

android {
    compileSdk 35

    defaultConfig {
        applicationId "com.example.composedemo"
        minSdkVersion 26
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = 17
//        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
//        languageVersion = "2.0"
    }

    buildFeatures {
        compose true
        buildConfig true
    }
    dataBinding {
        enabled = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion kotlin_compiler
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    packaging {
        resources.excludes.add("META-INF/versions/9/OSGI-INF/MANIFEST.MF")
    }

//    kotlin {
//        sourceSets.configureEach {
//            languageSettings {
//                languageVersion = "2.0"
//            }
//        }
//    }

    namespace 'com.example.composedemo'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    api "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material3:material3-android:1.3.2"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation 'androidx.activity:activity-compose:1.10.1'


    implementation project(path: ':glpanorama')
    implementation 'androidx.paging:paging-compose:3.3.6'
    implementation project(path: ':richeditor')
    implementation files('lib/JavaPrettify-1.2.1.jar')
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:3.0.3'


    // CameraX core library
     def cameraxVersion = "1.4.2"

    implementation("androidx.camera:camera-core:$cameraxVersion")
    implementation("androidx.camera:camera-camera2:$cameraxVersion")
    implementation("androidx.camera:camera-lifecycle:$cameraxVersion")
    implementation("androidx.camera:camera-video:$cameraxVersion")

    implementation("androidx.camera:camera-view:$cameraxVersion")
    implementation("androidx.camera:camera-extensions:$cameraxVersion")

    implementation "com.google.guava:guava:33.3.1-jre"



    //权限
    def accompanist_version = '0.36.0'
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager:${accompanist_version}"
    implementation "com.google.accompanist:accompanist-pager-indicators:${accompanist_version}"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    implementation "com.google.accompanist:accompanist-webview:$accompanist_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.1"
    implementation("androidx.navigation:navigation-compose:2.8.9")


    api("androidx.lifecycle:lifecycle-extensions:2.2.0")
    def lifecycle = '2.8.7'
    api("androidx.lifecycle:lifecycle-common-java8:${lifecycle}")
    // viewModel
    api("androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle}")
    // liveData
    api("androidx.lifecycle:lifecycle-livedata-ktx:${lifecycle}")
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:${lifecycle}"
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:${lifecycle}")
    api("androidx.lifecycle:lifecycle-runtime-ktx:${lifecycle}")

    api("androidx.palette:palette-ktx:1.0.0")

    implementation "com.airbnb.android:lottie-compose:6.4.1"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"


    api('io.coil-kt:coil-compose:2.7.0')

    // = "com.github.iamjosephmj:flinger:${Versions.flinger}"
    //implementation 'com.github.iamjosephmj:flinger:1.1.1'

    implementation 'com.google.mlkit:image-labeling:17.0.9'
    implementation 'com.google.mlkit:object-detection:17.0.2'
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.1'

    implementation 'com.google.mlkit:entity-extraction:16.0.0-beta6'

    // To recognize Chinese script
    implementation 'com.google.mlkit:text-recognition-chinese:16.0.1'
    implementation 'com.google.code.gson:gson:2.11.0'

    implementation 'androidx.profileinstaller:profileinstaller:1.4.1'

    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:12.1.0'

    implementation "androidx.recyclerview:recyclerview:1.4.0"
    implementation 'io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.3'
    implementation 'com.google.android.gms:play-services-ads:23.6.0'

    kapt "com.google.dagger:hilt-compiler:${hilt_version}"
    implementation "com.google.dagger:hilt-android:${hilt_version}"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"

    implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5")

    implementation ("com.google.guava:guava:33.3.1-android")

    implementation "androidx.bluetooth:bluetooth:1.0.0-alpha02"



    def media3_version = "1.6.1"
    // For media playback using ExoPlayer
    implementation("androidx.media3:media3-exoplayer:$media3_version")
    // For DASH playback support with ExoPlayer
    implementation("androidx.media3:media3-exoplayer-dash:$media3_version")
    // For HLS playback support with ExoPlayer
    implementation("androidx.media3:media3-exoplayer-hls:$media3_version")
    // For SmoothStreaming playback support with ExoPlayer
    implementation("androidx.media3:media3-exoplayer-smoothstreaming:$media3_version")
    // For RTSP playback support with ExoPlayer
    implementation("androidx.media3:media3-exoplayer-rtsp:$media3_version")
    // For MIDI playback support with ExoPlayer (see additional dependency requirements in
    // https://github.com/androidx/media/blob/release/libraries/decoder_midi/README.md)
    //implementation("androidx.media3:media3-exoplayer-midi:$media3_version")
    // For ad insertion using the Interactive Media Ads SDK with ExoPlayer
    implementation("androidx.media3:media3-exoplayer-ima:$media3_version")

    // For loading data using the Cronet network stack
    implementation("androidx.media3:media3-datasource-cronet:$media3_version")
    // For loading data using the OkHttp network stack
    implementation("androidx.media3:media3-datasource-okhttp:$media3_version")
    // For loading data using librtmp
    implementation("androidx.media3:media3-datasource-rtmp:$media3_version")
    // For building media playback UIs using Compose
    implementation("androidx.media3:media3-ui-compose:$media3_version")
    // For building media playback UIs using Views
    implementation("androidx.media3:media3-ui:$media3_version")
    // For building media playback UIs using Jetpack Compose
    implementation("androidx.media3:media3-ui-compose:$media3_version")
    // For building media playback UIs for Android TV using the Jetpack Leanback library
    implementation("androidx.media3:media3-ui-leanback:$media3_version")
    // For exposing and controlling media sessions
    implementation("androidx.media3:media3-session:$media3_version")
    // For extracting data from media containers
    implementation("androidx.media3:media3-extractor:$media3_version")
    // For integrating with Cast
    implementation("androidx.media3:media3-cast:$media3_version")
    // For scheduling background operations using Jetpack Work's WorkManager with ExoPlayer
    implementation("androidx.media3:media3-exoplayer-workmanager:$media3_version")
    // For transforming media files
    implementation("androidx.media3:media3-transformer:$media3_version")
    // For applying effects on video frames
    implementation("androidx.media3:media3-effect:$media3_version")
    // For muxing media files
    implementation("androidx.media3:media3-muxer:$media3_version")
    // Utilities for testing media components (including ExoPlayer components)
    implementation("androidx.media3:media3-test-utils:$media3_version")
    // Utilities for testing media components (including ExoPlayer components) via Robolectric
    implementation("androidx.media3:media3-test-utils-robolectric:$media3_version")
    // Common functionality for reading and writing media containers
    implementation("androidx.media3:media3-container:$media3_version")
    // Common functionality for media database components
    implementation("androidx.media3:media3-database:$media3_version")
    // Common functionality for media decoders
    implementation("androidx.media3:media3-decoder:$media3_version")
    // Common functionality for loading data
    implementation("androidx.media3:media3-datasource:$media3_version")
    // Common functionality used across multiple media libraries
    implementation("androidx.media3:media3-common:$media3_version")
    // Common Kotlin-specific functionality
    implementation("androidx.media3:media3-common-ktx:$media3_version")

    implementation("androidx.compose.material:material-icons-extended:1.7.8")
}